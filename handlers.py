import logging
from aiogram import types
from aiogram.enums.chat_action import ChatAction
from aiogram.filters import Command
from openai_client import generate_image

async def send_welcome(message: types.Message):
    await message.reply(
        "üëã –ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –ø—Ä–æ—Å—Ç—ã–º —Ä—É—Å—Å–∫–∏–º, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å, "
        "–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–Ω–∞—Ä–∏—Å—É–π —É–ª—ã–±–∞—é—â–µ–≥–æ—Å—è —Ä–æ–±–æ—Ç–∞¬ª. –Ø –±—É–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å DALL¬∑E-3 –∏ –ø—Ä–∏—à–ª—é –∫–∞—Ä—Ç–∏–Ω–∫—É, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–∞!"
    )

async def handle_prompt(message: types.Message):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã, —á—Ç–æ–±—ã –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏—Ö –∫–∞–∫ –ø—Ä–æ–º–ø—Ç
    if message.text and message.text.startswith('/'):
        return

    prompt = message.text.strip()
    if not prompt:
        return

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    await message.bot.send_chat_action(chat_id=message.chat.id, action=ChatAction.UPLOAD_PHOTO)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    try:
        image_url = generate_image(prompt=prompt)
    except Exception:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        await message.reply("üò¢ –£–ø—Å, –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É. –ü–æ–ø—Ä–æ–±—É–π —á—É—Ç—å –ø–æ–∑–∂–µ.")
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
    await message.bot.send_photo(chat_id=message.chat.id, photo=image_url)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
def register_handlers(dp):
    dp.message.register(send_welcome, Command(commands=["start", "help"]))
    dp.message.register(handle_prompt)
